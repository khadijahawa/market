"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4032],{36003:function(t,r,e){e.d(r,{S:function(){return n}});var a=e(60817);class n{get chainId(){return this._chainId}constructor(t,r,e){this.contractWrapper=t,this.storage=r,this.erc721=new a.aD(this.contractWrapper,this.storage,e),this._chainId=e}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.readContract.address}async getAll(t){return this.erc721.getAll(t)}async getOwned(t){return t&&(t=await (0,a.cC)(t)),this.erc721.getOwned(t)}async getOwnedTokenIds(t){return t&&(t=await (0,a.cC)(t)),this.erc721.getOwnedTokenIds(t)}async totalSupply(){return this.erc721.totalCirculatingSupply()}async get(t){return this.erc721.get(t)}async ownerOf(t){return this.erc721.ownerOf(t)}async balanceOf(t){return this.erc721.balanceOf(t)}async balance(){return this.erc721.balance()}async isApproved(t,r){return this.erc721.isApproved(t,r)}transfer=(0,a.dp)(async(t,r)=>this.erc721.transfer.prepare(t,r));setApprovalForAll=(0,a.dp)(async(t,r)=>this.erc721.setApprovalForAll.prepare(t,r));setApprovalForToken=(0,a.dp)(async(t,r)=>a.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approve",args:[await (0,a.cC)(t),r]}))}},34032:function(t,r,e){e.r(r),e.d(r,{SignatureDrop:function(){return p}});var a=e(62),n=e(60817),i=e(36003),c=e(67464),s=e(2593),o=e(9279);e(13550),e(2162),e(64063),e(77191),e(54098),e(54146);class p extends i.S{static contractRoles=n.dC;constructor(t,r,e){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new n.dn(t,r,i,a,e);super(o,e,s),this.abi=n.e.parse(i||[]),this.metadata=new n.ah(this.contractWrapper,n.dv,this.storage),this.app=new n.b0(this.contractWrapper,this.metadata,this.storage),this.roles=new n.ai(this.contractWrapper,p.contractRoles),this.royalties=new n.aj(this.contractWrapper,this.metadata),this.sales=new n.ak(this.contractWrapper),this.encoder=new n.ag(this.contractWrapper),this.estimator=new n.aQ(this.contractWrapper),this.events=new n.aR(this.contractWrapper),this.platformFees=new n.aT(this.contractWrapper),this.interceptor=new n.aS(this.contractWrapper),this.claimConditions=new n.am(this.contractWrapper,this.metadata,this.storage),this.signature=new n.aE(this.contractWrapper,this.storage),this.revealer=new n.al(this.contractWrapper,this.storage,n.dO.name,()=>this.erc721.nextTokenIdToMint()),this.signature=new n.aE(this.contractWrapper,this.storage),this.owner=new n.aV(this.contractWrapper),this.checkout=new c.a(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.readContract.address}async totalSupply(){let t=await this.totalClaimedSupply(),r=await this.totalUnclaimedSupply();return t.add(r)}async getAllClaimed(t){let r=s.O$.from(t?.start||0).toNumber(),e=s.O$.from(t?.count||a.D).toNumber(),n=Math.min((await this.totalClaimedSupply()).toNumber(),r+e);return await Promise.all(Array.from(Array(n).keys()).map(t=>this.get(t.toString())))}async getAllUnclaimed(t){let r=s.O$.from(t?.start||0).toNumber(),e=s.O$.from(t?.count||a.D).toNumber(),n=s.O$.from(Math.max((await this.totalClaimedSupply()).toNumber(),r)),i=s.O$.from(Math.min((await this.contractWrapper.readContract.nextTokenIdToMint()).toNumber(),n.toNumber()+e));return await Promise.all(Array.from(Array(i.sub(n).toNumber()).keys()).map(t=>this.erc721.getTokenMetadata(n.add(t).toString())))}async totalClaimedSupply(){return this.erc721.totalClaimedSupply()}async totalUnclaimedSupply(){return this.erc721.totalUnclaimedSupply()}async isTransferRestricted(){let t=await this.contractWrapper.readContract.hasRole((0,n.bI)("transfer"),o.d);return!t}createBatch=(0,n.dp)(async(t,r)=>this.erc721.lazyMint.prepare(t,r));async getClaimTransaction(t,r,e){return this.erc721.getClaimTransaction(t,r,e)}claimTo=(0,n.dp)(async(t,r,e)=>this.erc721.claimTo.prepare(t,r,e));claim=(0,n.dp)(async(t,r)=>this.erc721.claim.prepare(t,r));burn=(0,n.dp)(async t=>this.erc721.burn.prepare(t));async prepare(t,r,e){return n.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}},67464:function(t,r,e){e.d(r,{a:function(){return h}});var a=e(60817),n=e(38776);let i="https://paper.xyz/api/2022-08-12/platform/thirdweb",c={[a.cK.Mainnet]:"Ethereum",[a.cK.Goerli]:"Goerli",[a.cK.Polygon]:"Polygon",[a.cK.Mumbai]:"Mumbai",[a.cK.Avalanche]:"Avalanche"};async function s(t,r){let e=((0,n.Z)(r in c,`chainId not supported by paper: ${r}`),c[r]),a=await fetch(`${i}/register-contract?contractAddress=${t}&chain=${e}`),s=await a.json();return(0,n.Z)(s.result.id,"Contract is not registered with paper"),s.result.id}let o={expiresInMinutes:15,feeBearer:"BUYER",sendEmailOnSuccess:!0,redirectAfterPayment:!1};async function p(t,r){let e=await fetch(`${i}/checkout-link-intent`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contractId:t,...o,...r,metadata:{...r.metadata,via_platform:"thirdweb"},hideNativeMint:!0,hidePaperWallet:!!r.walletAddress,hideExternalWallet:!0,hidePayWithCrypto:!0,usePaperKey:!1})}),a=await e.json();return(0,n.Z)(a.checkoutLinkIntentUrl,"Failed to create checkout link intent"),a.checkoutLinkIntentUrl}class h{constructor(t){this.contractWrapper=t}async getCheckoutId(){return s(this.contractWrapper.address,await this.contractWrapper.getChainID())}async isEnabled(){try{return!!await this.getCheckoutId()}catch(t){return!1}}async createLinkIntent(t){return await p(await this.getCheckoutId(),t)}}}}]);